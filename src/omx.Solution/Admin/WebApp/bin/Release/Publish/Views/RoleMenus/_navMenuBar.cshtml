@using WebApp.Models

@model  IEnumerable<MenuItem>
<!-- Left panel : Navigation area -->
<!-- Note: This width of the aside area can be adjusted through LESS variables -->
  <ul id="js-nav-menu" class="nav-menu">
    <li class="nav-title">导航栏</li>
    @{
      var nodes = Model;
      if (nodes.Any())
      {
        foreach (var node in nodes.Where(x => x.ParentId == null))
        {
          @RenderSubMenuRecursive(node)
        }
      }
    }

    @helper RenderSubMenuRecursive(WebApp.Models.MenuItem node)
    {

      var childNodes = Model.Where(x => x.ParentId == node.Id);
      if (childNodes.Any())
      {
        var childcontrollers = childNodes.Select(x =>x.Controller).ToArray();
        var icon = String.IsNullOrEmpty(node.IconCls) ? "fa fa-lg fa-fw fa-folder-o" : node.IconCls;
        <li class="@Html.RouteIf(childcontrollers,"active open")">
          <a href="#" title="@node.Description">
            <i class="@icon"></i>
            <span class="nav-link-text" data-i18n="nav.@node.Code" >@node.Title</span>
          </a>
          <ul>
            @foreach (var childNode in childNodes)
            {
              @RenderSubMenuRecursive(childNode)
            }
          </ul>
        </li>
      }
      else
      {

        <li class="@Html.IsSelected(action:node.Action, controller: node.Controller)">
          <a href="@node.Url" title="@node.Description" data-filter-tags="@node.Description">
            <span class="nav-link-text" data-i18n="nav.@node.Code" >@node.Title</span>
          </a>
        </li>

      }





    }
    
  </ul>
   
